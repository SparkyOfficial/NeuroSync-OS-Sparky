<?xml version="1.0" encoding="UTF-8"?>
<documentation project="NeuroSync OS Sparky" version="1.0.0">
    <classes>
        <class>
            <name>BenchmarkType</name>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </class>
        <class>
            <name>BenchmarkSuite</name>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </class>
        <class>
            <name>ConfigValueType</name>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </class>
        <class>
            <name>ConfigurationManager</name>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </class>
        <class>
            <name>SchedulingAlgorithmType</name>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </class>
        <class>
            <name>AdvancedScheduler</name>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </class>
        <class>
            <name>PriorityBasedScheduling</name>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </class>
        <class>
            <name>RoundRobinScheduling</name>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </class>
        <class>
            <name>WeightedFairQueuingScheduling</name>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </class>
        <class>
            <name>SchedulingAlgorithm</name>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </class>
        <class>
            <name>Scheduler</name>
            <file>.\src\core\Scheduler.h</file>
            <description></description>
        </class>
        <class>
            <name>TaskType</name>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </class>
        <class>
            <name>TaskStatus</name>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </class>
        <class>
            <name>TaskManager</name>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </class>
        <class>
            <name>Diagnostics</name>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </class>
        <class>
            <name>PerformanceMonitor</name>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </class>
        <class>
            <name>Profiler</name>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </class>
        <class>
            <name>Visualizer</name>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </class>
        <class>
            <name>DocumentationType</name>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </class>
        <class>
            <name>DocumentationGenerator</name>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </class>
        <class>
            <name>EventType</name>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>EventSystem</name>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>FileType</name>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>FileSystem</name>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>LogLevel</name>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>LogOutputType</name>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>LogOutput</name>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>ConsoleLogOutput</name>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>FileLogOutput</name>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>LoggingSystem</name>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>GarbageCollector</name>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </class>
        <class>
            <name>MemoryCore</name>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </class>
        <class>
            <name>PoolType</name>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </class>
        <class>
            <name>MemoryPool</name>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </class>
        <class>
            <name>MessageType</name>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </class>
        <class>
            <name>NetworkStatus</name>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </class>
        <class>
            <name>NetworkCommunication</name>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </class>
        <class>
            <name>NetworkType</name>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </class>
        <class>
            <name>NeuralNetwork</name>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </class>
        <class>
            <name>NeuronLifecycleManager</name>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </class>
        <class>
            <name>NeuronType</name>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </class>
        <class>
            <name>NeuronStatus</name>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </class>
        <class>
            <name>NeuronModel</name>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </class>
        <class>
            <name>NeuronManager</name>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </class>
        <class>
            <name>NeuronUtils</name>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </class>
        <class>
            <name>ExamplePlugin</name>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </class>
        <class>
            <name>PluginInterface</name>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>PluginSystem</name>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </class>
        <class>
            <name>EncryptionType</name>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </class>
        <class>
            <name>AuthType</name>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </class>
        <class>
            <name>SecurityLevel</name>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </class>
        <class>
            <name>SecurityStatus</name>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </class>
        <class>
            <name>SecurityModule</name>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </class>
        <class>
            <name>MessagePriority</name>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </class>
        <class>
            <name>PriorityMessageQueue</name>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </class>
        <class>
            <name>SynapseBus</name>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </class>
        <class>
            <name>WeightedConnectionManager</name>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </class>
        <class>
            <name>TestType</name>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </class>
        <class>
            <name>TestStatus</name>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </class>
        <class>
            <name>TestingFramework</name>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </class>
        <class>
            <name>ThreadPool</name>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </class>
        <class>
            <name>F,</name>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </class>
        <class>
            <name>F,</name>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </class>
        <class>
            <name>ChartType</name>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </class>
        <class>
            <name>DataType</name>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </class>
        <class>
            <name>VisualizationStatus</name>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </class>
        <class>
            <name>VisualizationModule</name>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </class>
    </classes>
    <functions>
        <function>
            <name>neurosync_init</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_create_neuron</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_delete_neuron</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_create_connection</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_send_message</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_start</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_stop</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_create_neuron_advanced</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_activate_neuron</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_deactivate_neuron</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_active_neuron_count</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_total_neuron_count</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_update_connection_weight</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_connection_weight</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_activate_connection</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_deactivate_connection</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_connection_count</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_message_queue_size</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_system_statistics</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_set_neuron_threshold</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_neuron_threshold</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_set_neuron_callback</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_neuron_id_by_name</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_create_neuron_advanced</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_activate_neuron</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_deactivate_neuron</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_active_neuron_count</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_total_neuron_count</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_update_connection_weight</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_connection_weight</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_activate_connection</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_deactivate_connection</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_connection_count</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_message_queue_size</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_system_statistics</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_set_neuron_threshold</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_neuron_threshold</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_set_neuron_callback</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name>neurosync_get_neuron_id_by_name</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </function>
        <function>
            <name></name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>~BenchmarkSuite</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>runAllBenchmarks</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>getBenchmarkResults</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>clearBenchmarkResults</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>generateReport</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>getConfiguration</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>setConfiguration</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>std::function<void</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>generateTextReport</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>generateJsonReport</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>generateCsvReport</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>loadFromFile</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>saveToFile</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>setConfigValue</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getConfigValue</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getString</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getInteger</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getFloat</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getBoolean</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>hasKey</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>removeConfigValue</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getAllKeys</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>clear</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getConfigCount</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>setDefaultConfiguration</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>trim</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>parseLine</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>valueToString</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>stringToValue</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>start</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>stop</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>addTask</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>removeTask</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskPriority</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskWeight</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>getTaskStatus</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>setSchedulingAlgorithm</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentAlgorithmType</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>getTaskCount</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>getRunningTaskCount</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>getPendingTaskCount</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatistics</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>schedulerLoop</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>executeTask</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>updateStatistics</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>createSchedulingAlgorithm</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>selectNextTask</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>addTask</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>removeTask</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskPriority</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>getTaskCount</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>isEmpty</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>selectNextTask</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>addTask</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>removeTask</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskPriority</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>getTaskCount</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>isEmpty</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>setDefaultTimeQuantum</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>selectNextTask</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>addTask</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>removeTask</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskPriority</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>getTaskCount</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>isEmpty</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>setTaskWeight</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </function>
        <function>
            <name>~SchedulingAlgorithm</name>
            <class>SchedulingAlgorithm</class>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>SchedulingAlgorithm</class>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </function>
        <function>
            <name>selectNextTask</name>
            <class>SchedulingAlgorithm</class>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </function>
        <function>
            <name>addTask</name>
            <class>SchedulingAlgorithm</class>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </function>
        <function>
            <name>removeTask</name>
            <class>SchedulingAlgorithm</class>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskPriority</name>
            <class>SchedulingAlgorithm</class>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </function>
        <function>
            <name>getTaskCount</name>
            <class>SchedulingAlgorithm</class>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </function>
        <function>
            <name>isEmpty</name>
            <class>SchedulingAlgorithm</class>
            <file>.\src\core\interfaces\SchedulingAlgorithm.h</file>
            <description></description>
        </function>
        <function>
            <name>start</name>
            <class>Scheduler</class>
            <file>.\src\core\Scheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>stop</name>
            <class>Scheduler</class>
            <file>.\src\core\Scheduler.h</file>
            <description></description>
        </function>
        <function>
            <name>addTask</name>
            <class>Scheduler</class>
            <file>.\src\core\Scheduler.h</file>
            <description></description>
        </function>
        <function>
            <name></name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>createTask</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>deleteTask</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getTask</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskStatus</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskPriority</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>updateTaskWeight</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>addTaskDependency</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>removeTaskDependency</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getAllTasks</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getTasksByType</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getTasksByStatus</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getTaskCount</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>clearAllTasks</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentTimeMillis</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </function>
        <function>
            <name>startTracing</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>stopTracing</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>logEvent</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>getReport</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>getTextReport</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>getHTMLReport</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>exportToCSV</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>exportToJSON</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>beginProfile</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>endProfile</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>startPerformanceMonitoring</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>stopPerformanceMonitoring</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>getLatestMetrics</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>checkThresholds</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>formatTimestamp</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </function>
        <function>
            <name>startMonitoring</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>stopMonitoring</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>updateMetrics</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>getLatestMetrics</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>getMetricsHistory</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>getAverageMetrics</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>exportToJSON</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>checkThresholds</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>updateHistory</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </function>
        <function>
            <name>begin</name>
            <class>Profiler</class>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </function>
        <function>
            <name>end</name>
            <class>Profiler</class>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </function>
        <function>
            <name>getEvents</name>
            <class>Profiler</class>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </function>
        <function>
            <name>clear</name>
            <class>Profiler</class>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </function>
        <function>
            <name>exportToJSON</name>
            <class>Profiler</class>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </function>
        <function>
            <name>generateTextReport</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </function>
        <function>
            <name>generateHTMLReport</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </function>
        <function>
            <name>exportToCSV</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </function>
        <function>
            <name>getNeuronActivity</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </function>
        <function>
            <name>getAllActivity</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </function>
        <function>
            <name>clear</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </function>
        <function>
            <name>formatTimestamp</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </function>
        <function>
            <name></name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>~DocumentationGenerator</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>analyzeSourceFiles</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>generateDocumentation</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>getConfiguration</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>setConfiguration</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>getClasses</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>getFunctions</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>getVariables</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>parseSourceFile</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>parseHeaderFile</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>extractComment</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>getFilesInDirectory</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>generateHtmlDocumentation</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>generateMarkdownDocumentation</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>generateXmlDocumentation</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>generateHtmlIndex</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>generateHtmlClassPage</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>generateHtmlFunctionPage</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>sanitizeHtml</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </function>
        <function>
            <name>std::function<void</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>start</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>stop</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>registerHandler</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>removeHandler</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>publishEvent</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>publishEventAsync</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>subscribe</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>unsubscribe</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getPendingEventCount</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getProcessedEventCount</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>clearEventQueue</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>setMaxQueueSize</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getMaxQueueSize</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatistics</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>processEvents</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentTimeMillis</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>updateStatistics</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>isSubscribed</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>~FileSystem</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getBasePath</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>createDirectory</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>removeDirectory</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>directoryExists</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>createFile</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>removeFile</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>fileExists</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>readFile</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>writeFile</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getFileMetadata</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>updateFileMetadata</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>renameFile</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>copyFile</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>listFiles</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>listDirectories</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getFileSize</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>clear</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>checkIntegrity</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getFullPath</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>validatePath</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>detectFileType</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>~LogOutput</name>
            <class>LogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>writeLog</name>
            <class>LogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getType</name>
            <class>LogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>LogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>close</name>
            <class>LogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>~ConsoleLogOutput</name>
            <class>ConsoleLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>writeLog</name>
            <class>ConsoleLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getType</name>
            <class>ConsoleLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>ConsoleLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>close</name>
            <class>ConsoleLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>~FileLogOutput</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>writeLog</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getType</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>close</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>setFilename</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getFilename</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>setLogLevel</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getLogLevel</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>addLogOutput</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>removeLogOutput</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>log</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>debug</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>info</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>warning</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>error</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>critical</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getOutputCount</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>closeAllOutputs</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>formatLogMessage</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentTimestamp</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getThreadId</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getLogLevelName</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>shouldLog</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>std::chrono::steady_clock::now</name>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>registerObject</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>addReference</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>removeReference</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>markObject</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>collect</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>startAutoCollection</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>stopAutoCollection</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>getTotalObjects</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>getCollectedObjects</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>getTotalMemoryFreed</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>markAndSweep</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>mark</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>sweep</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>autoCollectionLoop</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </function>
        <function>
            <name>allocate</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>deallocate</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>registerForGC</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>addReference</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>removeReference</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>collectGarbage</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getUsedMemory</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getTotalMemory</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getFreeMemory</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getPoolUsedMemory</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getPoolTotalMemory</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getPoolFreeMemory</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getGCTotalObjects</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getGCCollectedObjects</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getGCTotalMemoryFreed</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>getPoolType</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>initializePools</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </function>
        <function>
            <name>allocate</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>deallocate</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>getTotalSize</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>getUsedSize</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>getFreeSize</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>getBlockCount</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>contains</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>initializePool</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>findFreeBlock</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>splitBlock</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>mergeFreeBlocks</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </function>
        <function>
            <name>~NetworkCommunication</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>connect</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>disconnect</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>disconnectAll</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>sendMessage</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>receiveMessage</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>sendHeartbeat</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatus</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>getNodeId</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>setNodeId</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectedNodeCount</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>isNodeConnected</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectedNodes</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>startServer</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>stopServer</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>getIncomingMessageCount</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>getOutgoingMessageCount</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>clearStatistics</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>sendRawData</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>receiveRawData</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>serializeMessage</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>deserializeMessage</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>serverLoop</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>handleIncomingConnection</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>handleDisconnection</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>processIncomingMessage</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>validateMessage</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>generateNodeId</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>addLayer</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>removeLayer</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>connectLayers</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>predict</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>getOutput</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>updateWeights</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>saveModel</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>loadModel</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>getName</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>getType</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>getLayerCount</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>getNeuronCount</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatistics</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>initializeStatistics</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>calculateLoss</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>backpropagate</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>sigmoid</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>sigmoidDerivative</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentTimeMillis</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>createNeuron</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>deleteNeuron</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getNeuron</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>activateNeuron</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>deactivateNeuron</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>setNeuronStatus</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getNeuronStatus</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>addConnection</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>removeConnection</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>updateConnectionWeight</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>addInputSignal</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>shouldNeuronFire</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getNeuronFiringOutput</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getNeuronCount</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getActiveNeuronCount</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getId</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getType</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getName</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatus</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>setStatus</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getState</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>updateState</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>addInput</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getInputs</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>clearInputs</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>addOutput</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getOutputs</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>clearOutputs</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>addConnection</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>removeConnection</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnections</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>updateConnectionWeight</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getCreationTime</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getLastUpdateTime</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>setLastUpdateTime</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>activate</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>deactivate</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>shouldFire</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getFiringOutput</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>calculateActivation</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>processInputs</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>generateOutput</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentTimeMillis</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>createNeuron</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>createNeuron</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>deleteNeuron</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>activateNeuron</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>deactivateNeuron</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getActiveNeuronCount</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getTotalNeuronCount</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>addConnection</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>removeConnection</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>updateConnectionWeight</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </function>
        <function>
            <name>printNetworkStatistics</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </function>
        <function>
            <name>generateNeuronName</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </function>
        <function>
            <name>generateRandomWeight</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </function>
        <function>
            <name>~ExamplePlugin</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>deinitialize</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>getName</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>getVersion</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>getDescription</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>doSomething</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>createPlugin</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>destroyPlugin</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </function>
        <function>
            <name>~PluginInterface</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>deinitialize</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getName</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getVersion</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getDescription</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name></name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name></name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>loadPlugin</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>unloadPlugin</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getLoadedPlugins</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getPluginInfo</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>isPluginLoaded</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getPluginInstance</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>loadPluginsFromDirectory</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>unloadAllPlugins</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getPluginCount</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>loadPluginLibrary</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>unloadPluginLibrary</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>getFileNameFromPath</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </function>
        <function>
            <name>~SecurityModule</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>start</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>stop</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>generateKey</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>generateSession</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>terminateSession</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getSessionInfo</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>validateSession</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatus</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getConfiguration</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>setConfiguration</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getActiveSessionCount</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>cleanExpiredSessions</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>addTrustedCertificate</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>removeTrustedCertificate</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>validateCertificate</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>generateRandomString</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>generateRandomBytes</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>hashData</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>rotateKeys</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>sessionCleanup</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>enqueue</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>dequeue</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>peek</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>size</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>isEmpty</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>clear</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>setMaxSize</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>getMaxSize</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>isFull</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatistics</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>updateStatistics</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>generateMessageId</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentTimeMillis</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>updatePriorityStatistics</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>createConnection</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>removeConnection</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>updateConnectionWeight</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectionWeight</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>activateConnection</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>deactivateConnection</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectionCount</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>getMessageQueueSize</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatistics</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>createConnection</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>removeConnection</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>updateConnectionWeight</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectionWeight</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>connectionExists</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>activateConnection</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>deactivateConnection</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectionsForNeuron</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getIncomingConnections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getOutgoingConnections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectionCount</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getIncomingConnectionCount</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getOutgoingConnectionCount</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>clearAllConnections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatistics</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>updateUsageStatistics</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectionsSortedByWeight</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectionsSortedByUsageTime</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getConnectionsSortedByUsageCount</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>generateConnectionKey</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentTimeMillis</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>updateConnectionStatistics</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>removeConnectionFromMaps</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </function>
        <function>
            <name>~TestingFramework</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>registerTestSuite</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>runAllTests</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>runTestSuite</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>runTest</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>getTestResults</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>getConfiguration</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>setConfiguration</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>getTestCount</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>getTestSuiteCount</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>clearTestResults</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>addAssertion</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>getPassedAssertionCount</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>getFailedAssertionCount</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>setCurrentTest</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>getCurrentTest</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>setCurrentTestStatus</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>exportResults</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>importResults</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>generateReport</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>std::function<void</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>generateTextReport</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>generateXmlReport</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>generateJsonReport</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>updateSuiteStatistics</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>shouldRunSuite</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>shouldRunTest</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </function>
        <function>
            <name>ThreadPool</name>
            <class>ThreadPool</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>operator=</name>
            <class>ThreadPool</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>std::result_of<F</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>getThreadCount</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>getQueueSize</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>stop</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>restart</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>std::result_of<F</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>task->get_future</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>lock</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>std::runtime_error</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </function>
        <function>
            <name>~VisualizationModule</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>initialize</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>start</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>stop</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>removeChart</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getChart</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getChartList</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>renderAllCharts</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getStatus</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getConfiguration</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>setConfiguration</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getChartCount</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>clearAllCharts</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>getChartProperties</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>generateChartId</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>renderLineChart</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>renderBarChart</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>renderPieChart</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>renderScatterPlot</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>renderHeatmap</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>renderNetworkDiagram</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>renderHistogram</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>serializeChartData</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
        <function>
            <name>deserializeChartData</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </function>
    </functions>
    <variables>
        <variable>
            <name>NeuroSyncNeuronType</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>NeuroSyncMessagePriority</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalMessagesSent</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalMessagesReceived</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>highPriorityMessages</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>criticalPriorityMessages</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalConnections</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activeConnections</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>NeuroSyncSystemStatistics</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight)</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight)</name>
            <file>.\src\api\NeuroAPI.h</file>
            <description></description>
        </variable>
        <variable>
            <name>NeuroSyncNeuronType</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>NeuroSyncMessagePriority</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalMessagesSent</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalMessagesReceived</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>highPriorityMessages</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>criticalPriorityMessages</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalConnections</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activeConnections</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>NeuroSyncSystemStatistics</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight)</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight)</name>
            <file>.\src\api\NeuroAPIAdvanced.h</file>
            <description></description>
        </variable>
        <variable>
            <name>testName</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>testType</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>startTime</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>endTime</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>duration</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>iterations</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>averageTimePerIteration</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>dataSize</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>throughput</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>additionalInfo</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>defaultIterations</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>enableWarmup</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>warmupIterations</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>verboseOutput</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputPath</name>
            <class>BenchmarkType</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>0)</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputPath)</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>config</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>benchmarkResults</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>benchmarkMutex</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>format)</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gBenchmarkSuite</name>
            <class>BenchmarkSuite</class>
            <file>.\src\benchmark\BenchmarkSuite.h</file>
            <description></description>
        </variable>
        <variable>
            <name>type</name>
            <class>ConfigValueType</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>stringValue</name>
            <class>ConfigValueType</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>intValue</name>
            <class>ConfigValueType</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>floatValue</name>
            <class>ConfigValueType</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>boolValue</name>
            <class>ConfigValueType</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>configValues</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>configMutex</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>configFileName</name>
            <class>ConfigurationManager</class>
            <file>.\src\config\ConfigurationManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalTasks</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>runningTasks</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>pendingTasks</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>completedTasks</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>failedTasks</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>cancelledTasks</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>averageExecutionTime</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalExecutionTime</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskManager</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>schedulingAlgorithm</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>currentAlgorithmType</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>running</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>schedulerThread</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>schedulerMutex</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>schedulerCondition</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>runningTasks</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>statisticsMutex</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalExecutionTime</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>completedTaskCount</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>failedTaskCount</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>cancelledTaskCount</name>
            <class>AdvancedScheduler</class>
            <file>.\src\core\AdvancedScheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskId</name>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>priority</name>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>other.timestamp</name>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>other.priority</name>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskQueue</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskMap</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestampCounter</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>PriorityBasedScheduling</class>
            <file>.\src\core\algorithms\PriorityBasedScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskId</name>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>priority</name>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timeQuantum</name>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>remainingTime</name>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskQueue</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskMap</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>defaultTimeQuantum</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>currentTaskIndex</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>RoundRobinScheduling</class>
            <file>.\src\core\algorithms\RoundRobinScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskId</name>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>priority</name>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight</name>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>virtualFinishTime</name>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>other.timestamp</name>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>other.virtualFinishTime</name>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskQueue</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskMap</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>systemVirtualTime</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestampCounter</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>1</name>
            <class>WeightedFairQueuingScheduling</class>
            <file>.\src\core\algorithms\WeightedFairQueuingScheduling.h</file>
            <description></description>
        </variable>
        <variable>
            <name>running</name>
            <class>Scheduler</class>
            <file>.\src\core\Scheduler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>id</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>name</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>type</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>status</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>priority</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>creationTime</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>startTime</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>endTime</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>executionTime</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>dependencies</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>userData</name>
            <class>TaskStatus</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>tasks</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>taskIdCounter</name>
            <class>TaskManager</class>
            <file>.\src\core\utils\TaskManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronId</name>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>eventType</name>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>message</name>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>messages)</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>tracingEnabled</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>events</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>diagnosticsMutex</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>profiler</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>visualizer</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>performanceMonitor</name>
            <class>Diagnostics</class>
            <file>.\src\diagnostics\Diagnostics.h</file>
            <description></description>
        </variable>
        <variable>
            <name>cpuUsage</name>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>memoryUsage</name>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activeNeurons</name>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activeSynapses</name>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>messagesPerSecond</name>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>metricsHistory</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>monitoringActive</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>monitorMutex</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>cpuThreshold</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>memoryThreshold</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronThreshold</name>
            <class>PerformanceMonitor</class>
            <file>.\src\diagnostics\PerformanceMonitor.h</file>
            <description></description>
        </variable>
        <variable>
            <name>name</name>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>startTime</name>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>endTime</name>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>duration</name>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>threadId</name>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activeEvents</name>
            <class>Profiler</class>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>completedEvents</name>
            <class>Profiler</class>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>profilerMutex</name>
            <class>Profiler</class>
            <file>.\src\diagnostics\Profiler.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronId</name>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activityType</name>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </variable>
        <variable>
            <name>intensity</name>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </variable>
        <variable>
            <name>connectedNeurons</name>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </variable>
        <variable>
            <name>{})</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronActivities</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </variable>
        <variable>
            <name>visualizerMutex</name>
            <class>Visualizer</class>
            <file>.\src\diagnostics\Visualizer.h</file>
            <description></description>
        </variable>
        <variable>
            <name>name</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>description</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>filePath</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>methods</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>properties</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>inheritance</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>name</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>description</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>returnType</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>parameters</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>filePath</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>className</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>name</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>description</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>type</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>filePath</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>className</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sourceDirectory</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputDirectory</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>fileExtensions</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>includePrivate</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>includeInternal</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>projectName</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>projectVersion</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>".cxx"}</name>
            <class>DocumentationType</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputPath)</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>config</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>classes</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>functions</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>variables</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>docGenMutex</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>filePath)</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"")</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"")</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gDocGenerator</name>
            <class>DocumentationGenerator</class>
            <file>.\src\docgen\DocumentationGenerator.h</file>
            <description></description>
        </variable>
        <variable>
            <name>eventId</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>type</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sourceId</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>targetId</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>data</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>priority</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>processed</name>
            <class>EventType</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalEventsPublished</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalEventsProcessed</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalEventsDropped</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activeSubscriptions</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>registeredHandlers</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastProcessingTime</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>eventQueue</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>queueMutex</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>eventCondition</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>handlers</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>handlersMutex</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>subscriptions</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>subscriptionsMutex</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>processingThread</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>running</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>statisticsMutex</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>statistics</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>maxQueueSize</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>eventIdCounter</name>
            <class>EventSystem</class>
            <file>.\src\event\EventSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>name</name>
            <class>FileType</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>type</name>
            <class>FileType</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>size</name>
            <class>FileType</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>created</name>
            <class>FileType</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>modified</name>
            <class>FileType</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>attributes</name>
            <class>FileType</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>basePath</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>fileMetadataMap</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gFileSystem</name>
            <class>FileSystem</class>
            <file>.\src\filesystem\FileSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>level</name>
            <class>LogOutputType</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>message</name>
            <class>LogOutputType</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>module</name>
            <class>LogOutputType</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <class>LogOutputType</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>threadId</name>
            <class>LogOutputType</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>ConsoleLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>filename</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>fileStream</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>FileLogOutput</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>currentLevel</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputs</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>logMutex</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gLogger</name>
            <class>LoggingSystem</class>
            <file>.\src\logging\LoggingSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>address</name>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>size</name>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>refCount</name>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastAccess</name>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>marked</name>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>objects</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>roots</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gcMutex</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>collectedObjects</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalMemoryFreed</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>autoCollectionRunning</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>autoCollectionThread</name>
            <class>GarbageCollector</class>
            <file>.\src\memory\GarbageCollector.h</file>
            <description></description>
        </variable>
        <variable>
            <name>smallPool</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </variable>
        <variable>
            <name>mediumPool</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </variable>
        <variable>
            <name>largePool</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </variable>
        <variable>
            <name>garbageCollector</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </variable>
        <variable>
            <name>coreMutex</name>
            <class>PoolType</class>
            <file>.\src\memory\MemoryCore.h</file>
            <description></description>
        </variable>
        <variable>
            <name>address</name>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>size</name>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>isFree</name>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>next</name>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>prev</name>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>poolMemory</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalSize</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>usedSize</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>blockCount</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>freeBlocks</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>usedBlocks</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>poolMutex</name>
            <class>MemoryPool</class>
            <file>.\src\memory\MemoryPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>type</name>
            <class>MessageType</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sourceId</name>
            <class>MessageType</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>destinationId</name>
            <class>MessageType</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>data</name>
            <class>MessageType</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <class>MessageType</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sequenceNumber</name>
            <class>MessageType</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>host</name>
            <class>NetworkStatus</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>port</name>
            <class>NetworkStatus</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>maxConnections</name>
            <class>NetworkStatus</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>bufferSize</name>
            <class>NetworkStatus</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timeoutMs</name>
            <class>NetworkStatus</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>enableEncryption</name>
            <class>NetworkStatus</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>encryptionKey</name>
            <class>NetworkStatus</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>config</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>status</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>nodeId</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>connectedNodes</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>incomingMessages</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outgoingMessages</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>incomingMessageCount</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outgoingMessageCount</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sequenceCounter</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>networkMutex</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>incomingMutex</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outgoingMutex</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>messageCondition</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>serverRunning</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>serverThread</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gNetworkComm</name>
            <class>NetworkCommunication</class>
            <file>.\src\network\NetworkCommunication.h</file>
            <description></description>
        </variable>
        <variable>
            <name>layerId</name>
            <class>NetworkType</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronCount</name>
            <class>NetworkType</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activationFunction</name>
            <class>NetworkType</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronIds</name>
            <class>NetworkType</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sourceNeuronId</name>
            <class>NetworkType</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>targetNeuronId</name>
            <class>NetworkType</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight</name>
            <class>NetworkType</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gradient</name>
            <class>NetworkType</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>learningRate)</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalLayers</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalNeurons</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalConnections</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>trainingAccuracy</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>validationAccuracy</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastTrainingTime</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>networkType</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>networkName</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>layers</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>connections</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronManager</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>synapseBus</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>statistics</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>isInitialized</name>
            <class>NeuralNetwork</class>
            <file>.\src\network_neural\NeuralNetwork.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neurons</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronsMutex</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronIdCounter</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>NeuronLifecycleManager</class>
            <file>.\src\neuron\lifecycle\NeuronLifecycleManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activationLevel</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>threshold</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>learningRate</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastFiredTime</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>fireCount</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>energyLevel</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sourceNeuronId</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>signalStrength</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>data</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>targetNeuronId</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>signalStrength</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>data</name>
            <class>NeuronStatus</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>id</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>type</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>name</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>status</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>state</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>inputs</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputs</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>connections</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>creationTime</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastUpdateTime</name>
            <class>NeuronModel</class>
            <file>.\src\neuron\models\NeuronModel.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lifecycleManager</name>
            <class>NeuronManager</class>
            <file>.\src\neuron\NeuronManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>layerSizes)</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronLayers)</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"Input")</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"Hidden")</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"Output")</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"Processing")</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"Memory")</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronIds)</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>neuronIds)</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>status)</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>inputs)</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>filename)</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>filename)</name>
            <class>NeuronUtils</class>
            <file>.\src\neuron\utils\NeuronUtils.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>ExamplePlugin</class>
            <file>.\src\plugin\ExamplePlugin.h</file>
            <description></description>
        </variable>
        <variable>
            <name>name</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>version</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>description</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>filePath</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>handle</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>instance</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>createFunc</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>destroyFunc</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>loaded</name>
            <class>PluginInterface</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>plugins</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>pluginsMutex</name>
            <class>PluginSystem</class>
            <file>.\src\plugin\PluginSystem.h</file>
            <description></description>
        </variable>
        <variable>
            <name>encryptionType</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>authType</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>securityLevel</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>encryptionKey</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>authKey</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>keyRotationInterval</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>enableCertificateValidation</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>trustedCertificates</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sessionId</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>nodeId</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>startTime</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastActivity</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>encryptionKey</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>authKey</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>isAuthenticated</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>isEncrypted</name>
            <class>SecurityLevel</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"")</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"")</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"")</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"")</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"")</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>config</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>status</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sessions</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>securityMutex</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>securityEventCount</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastKeyRotation</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>key)</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>key)</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>key)</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>key)</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gSecurityModule</name>
            <class>SecurityModule</class>
            <file>.\src\security\SecurityModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>messageId</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>senderId</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>receiverId</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>priority</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>deadline</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>data</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>dataSize</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>other.priority</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>other.deadline</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>other.timestamp</name>
            <class>MessagePriority</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalMessages</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>droppedMessages</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lowPriorityMessages</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>normalPriorityMessages</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>highPriorityMessages</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>criticalPriorityMessages</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>averageWaitTime</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>messageQueue</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>queueMutex</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>queueCondition</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>maxSize</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>statisticsMutex</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>stats</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>messageIdCounter</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>PriorityMessageQueue</class>
            <file>.\src\synapse\priority\PriorityMessageQueue.h</file>
            <description></description>
        </variable>
        <variable>
            <name>1)</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight)</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </variable>
        <variable>
            <name>messageStats</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </variable>
        <variable>
            <name>connectionStats</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </variable>
        <variable>
            <name>messageQueue</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </variable>
        <variable>
            <name>connectionManager</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>SynapseBus</class>
            <file>.\src\synapse\SynapseBus.h</file>
            <description></description>
        </variable>
        <variable>
            <name>sourceNeuronId</name>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>targetNeuronId</name>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>weight</name>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>creationTime</name>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastUsedTime</name>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>usageCount</name>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>active</name>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalConnections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activeConnections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>inactiveConnections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>averageWeight</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>totalUsage</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>averageUsagePerConnection</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>connections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>incomingConnections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outgoingConnections</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>connectionsMutex</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>statisticsMutex</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>stats</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>initialized</name>
            <class>WeightedConnectionManager</class>
            <file>.\src\synapse\utils\WeightedConnectionManager.h</file>
            <description></description>
        </variable>
        <variable>
            <name>testName</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>testType</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>status</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>errorMessage</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>startTime</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>endTime</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>duration</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>assertionsPassed</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>assertionsFailed</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>suiteName</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>testResults</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>startTime</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>endTime</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>duration</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>passedTests</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>failedTests</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>skippedTests</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>enableVerboseOutput</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>enableColorOutput</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>stopOnFailure</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>runSkippedTests</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputFormat</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputPath</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>includeSuites</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>excludeSuites</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>maxConcurrency</name>
            <class>TestStatus</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>config</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>testTypes</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>testResults</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>testingMutex</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>passedAssertions</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>failedAssertions</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>currentSuite</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>currentTest</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>suiteRegistry</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>result)</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>format)</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>data)</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gTestingFramework</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>false</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>true</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>exception")</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>thrown")</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>one")</name>
            <class>TestingFramework</class>
            <file>.\src\testing\TestingFramework.h</file>
            <description></description>
        </variable>
        <variable>
            <name>workers</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>queueMutex</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>condition</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>stopFlag</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>activeThreads</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>res</name>
            <class>F,</class>
            <file>.\src\threadpool\ThreadPool.h</file>
            <description></description>
        </variable>
        <variable>
            <name>timestamp</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>value</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>label</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>id</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>title</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>type</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>dataType</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>dataPoints</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>properties</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>width</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>height</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>backgroundColor</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>textColor</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>enableAnimation</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>refreshRate</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>enableExport</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>exportFormat</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>exportPath</name>
            <class>DataType</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>dataType)</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>dataPoint)</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>dataPoints)</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>"")</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>outputPath)</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>inputPath)</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>const</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>properties)</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>config</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>status</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>charts</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>visualizationMutex</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>renderCount</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>lastRender</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>maxPoints)</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
        <variable>
            <name>gVisualizationModule</name>
            <class>VisualizationModule</class>
            <file>.\src\visualization\VisualizationModule.h</file>
            <description></description>
        </variable>
    </variables>
</documentation>
